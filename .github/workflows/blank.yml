# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - "*"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.

    - run: printenv

    - name: define branchname
      run: |
        echo "::set-env name=branchname::${GITHUB_REF#refs/heads/}"

    - name: Run a npm env script with branchname
      run: |
        case "${branchname}" in
          "dev" | "develop" | "development" )         APP_ENV=dev envsubst < .env.dev > .env ;;
          "stg" | "staging" )                         APP_ENV=stg envsubst < .env.stg > .env ;;
          "prd" | "prod" | "production" | "master" )  APP_ENV=prd envsubst < .env.prd > .env ;;
          * ) echo "non target... ${branchname}"; exit 1;
        esac
        make deploy
      env:
        FOO_DEV: ${{ secrets.FOO_DEV }}
        FOO_STG: ${{ secrets.FOO_STG }}
        FOO_PRD: ${{ secrets.FOO_PRD }}
        BAR_DEV: ${{ secrets.BAR_DEV }}
        BAR_STG: ${{ secrets.BAR_STG }}
        BAR_PRD: ${{ secrets.BAR_PRD }}
    - name: Notify failure
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"failure! on '${branchname}'"}' ${SLACK_WEBHOOK_URL}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    - name: Notify success
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"success! on '${branchname}'"}' ${SLACK_WEBHOOK_URL}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
